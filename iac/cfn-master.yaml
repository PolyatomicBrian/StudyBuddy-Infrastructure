# cfn-master.yaml
# Author: Brian Jopling, Jan 2020
#
# Description:
#   Deploys nested templates to automate the creation of all infrastructure
#   required by StudyBuddy.
#
# Usage: 
#  - Manual validation of ACM certs must be done during the deployment process.
#      Otherwise, the stack will hang. (Three certs, one for Cognito, one for Frontend,
#      one for Backend API.)
#  - Upon completion of deployment, an Alias record must be created to point
#      the custom domain urls to the CloudFront distributions. (Three urls, one for 
#      Cognito, one for Frontend, one for Backend API.)
#
# Pre-requisites:
#   - Google Client ID and Client Secret must be stored in SecretsManager before deploying.
#   - DB Credentials must be stored in SecretsManager before deploying.
#   - GitHub token must be stored in SecretsManager before deploying.
#

AWSTemplateFormatVersion: "2010-09-09"
Description: Master template for creating all StudyBuddy infra.

######################################################
# PARAMETERS 
#   Parameters used when creating the infrastructure.
#   Change these prior to deploying, as necessary.
######################################################

Parameters:
  S3InfrastructureBucket:
    Type: String
    Default: studybuddy-cfn-templates
    Description: S3 bucket containing all the CloudFormation templates & OpenAPI Spec. Create & populate before deployment.
  APIUrl:
    Type: String
    Default: "api.somethingcode.com"
    Description: Post-deployment, create a DNS record pointing this to the APIGW CustomDomainName URL.
  URLFrontend:
    Type: String
    Default: "www.somethingcode.com"
    Description: Post-deployment, create a DNS record pointing this to the CloudFront URL.
  HostedUserPoolDomainName:
    Type: String
    Default: "signin.somethingcode.com"
    Description: Post-deployment, create a DNS record pointing this to the Cognito HostedUI URL.
  S3ArtifactsBucket:
    Type: String
    Default: studybuddy-cicd-pipeline
    Description: Bucket that will be created during deployment. Will contain the backend source code. Name must be unique.
  S3DocumentsBucketName:
    Type: String
    Default: studybuddy-documents
    Description: Bucket that will be created during deployment. Will contain user uploaded books. Name must be unique.
  GitHubUserName:
    Type: String
    Default: Chudly63
    Description: Username of GitHub user who owns the repositories.
  GitHubFrontendRepo:
    Type: String
    Default: StudyBuddy-FrontEnd
    Description: GitHub repo containing the frontend source code.
  GitHubBackendRepo:
    Type: String
    Default: StudyBuddy-BackEnd
    Description: GitHub repo containing the backend source code.
  GitHubBranchFrontend:
    Type: String
    Default: master
    Description: Git branch of the frontend repo to pull source code from.
  GitHubBranchBackend:
    Type: String
    Default: master
    Description: Git branch of the backend repo to pull source code from.


######################################################
# RESOURCES 
#   Resources (infrastructure) to be deployed.
#   These do not need to be modified before deploying.
######################################################


Resources:
  NestedStackCognito:
   Type: AWS::CloudFormation::Stack
   Properties: 
     Parameters:
       URLFrontend: !Ref URLFrontend
       HostedUserPoolDomainName: !Ref HostedUserPoolDomainName
     TemplateURL: !Sub "https://${S3InfrastructureBucket}.s3.amazonaws.com/cfn-nested-cognito.yaml"
     TimeoutInMinutes: 30

  NestedStackRDS:
    Type: AWS::CloudFormation::Stack
    Properties: 
      TemplateURL: !Sub "https://${S3InfrastructureBucket}.s3.amazonaws.com/cfn-nested-rds.yaml"
      TimeoutInMinutes: 35

  NestedStackLambda:
    Type: AWS::CloudFormation::Stack
    Properties: 
      Parameters:
        EnvVarDbUrl: !GetAtt NestedStackRDS.Outputs.RDSApplicationUrl
        SageMakerChunkClassifierEndpointName: !GetAtt NestedStackSageMaker.Outputs.SageMakerChunkClassifierEndpointName
        SageMakerQuestionClassifierEndpointName: !GetAtt NestedStackSageMaker.Outputs.SageMakerQuestionClassifierEndpointName
        CognitoClientId: !GetAtt NestedStackCognito.Outputs.CognitoClientId
        CognitoUserPoolId: !GetAtt NestedStackCognito.Outputs.CognitoUserPoolId
        CognitoCallbackUrl: !GetAtt NestedStackCognito.Outputs.CognitoCallbackUrl
        CognitoUserPoolArn: !GetAtt NestedStackCognito.Outputs.CognitoUserPoolArn
        S3ArtifactsBucket: !Ref S3ArtifactsBucket
        S3DocumentsBucketName: !Ref S3DocumentsBucketName
        HostedUserPoolDomainName: !Ref HostedUserPoolDomainName
      TemplateURL: !Sub "https://${S3InfrastructureBucket}.s3.amazonaws.com/cfn-nested-lambda.yaml"
      TimeoutInMinutes: 10

  NestedStackApiGateway:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters: 
        CognitoUserPoolArn: !GetAtt NestedStackCognito.Outputs.CognitoUserPoolArn
        APIUrl: !Ref APIUrl
        S3OpenApiSpecBucket: !Ref S3InfrastructureBucket
      TemplateURL: !Sub "https://${S3InfrastructureBucket}.s3.amazonaws.com/cfn-nested-apigw.yaml"
      TimeoutInMinutes: 10
  
  NestedStackFrontendS3:
   Type: AWS::CloudFormation::Stack
   Properties:
     Parameters:
       URLFrontend: !Ref URLFrontend
     TemplateURL: !Sub "https://${S3InfrastructureBucket}.s3.amazonaws.com/cfn-nested-frontend-s3.yaml"
     TimeoutInMinutes: 10

  NestedStackFrontendCloudFront:
   Type: AWS::CloudFormation::Stack
   Properties:
     Parameters:
       CloudFrontOriginAccessIdentity: !GetAtt NestedStackFrontendS3.Outputs.CloudFrontOriginAccessIdentity
       URLFrontend: !GetAtt NestedStackFrontendS3.Outputs.S3FrontendDeployBucket
     TemplateURL: !Sub "https://${S3InfrastructureBucket}.s3.amazonaws.com/cfn-nested-frontend-cloudfront.yaml"
     TimeoutInMinutes: 60
  
  NestedStackCICD:
   Type: AWS::CloudFormation::Stack
   DependsOn: 
   - NestedStackFrontendS3
   Properties:
     Parameters:
       S3FrontendDeployBucket: !Ref URLFrontend
       S3ArtifactsBucket: !Ref S3ArtifactsBucket
       GitHubUserName: !Ref GitHubUserName
       GitHubFrontendRepo: !Ref GitHubFrontendRepo
       GitHubBackendRepo: !Ref GitHubBackendRepo
       GitHubBranchFrontend: !Ref GitHubBranchFrontend
       GitHubBranchBackend: !Ref GitHubBranchBackend
       HostedUserPoolDomainName: !Ref HostedUserPoolDomainName
       CognitoClientId: !GetAtt NestedStackCognito.Outputs.CognitoClientId
     TemplateURL: !Sub "https://${S3InfrastructureBucket}.s3.amazonaws.com/cfn-nested-cicd.yaml"
     TimeoutInMinutes: 30

  # Needs to be created after CICD Pipelines.
  # The Backend CICD Pipeline pulls in the backend code from GitHub,
  # which includes the sqldump. The sqldump is imported into the RDS.
  NestedStackRDSImport:
    Type: AWS::CloudFormation::Stack
    DependsOn:
    - NestedStackCICD
    Properties: 
      Parameters:
        RDSEndpointAddress: !GetAtt NestedStackRDS.Outputs.RDSApplicationUrl
        S3ArtifactsBucket: !Ref S3ArtifactsBucket
      TemplateURL: !Sub "https://${S3InfrastructureBucket}.s3.amazonaws.com/cfn-nested-rds-import.yaml"
      TimeoutInMinutes: 25

  # Needs to be created after CICD Pipelines.
  # The Backend CICD Pipeline pulls in the backend code from GitHub,
  # which includes the SageMaker model data. 
  # The model data is used to construct the initial model.
  NestedStackSageMaker:
    Type: AWS::CloudFormation::Stack
    DependsOn:
    - NestedStackCICD
    - NestedStackFrontendCloudFront  # Force SageMaker to wait on lengthy process so Pipeline has time to deploy artifacts.
    Properties: 
      Parameters:
        S3ArtifactsBucket: !Ref S3ArtifactsBucket
      TemplateURL: !Sub "https://${S3InfrastructureBucket}.s3.amazonaws.com/cfn-nested-sagemaker.yaml"
      TimeoutInMinutes: 40
