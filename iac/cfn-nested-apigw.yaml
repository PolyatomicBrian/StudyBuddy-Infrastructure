# cfn-nested-apigw.yaml
# Author: Brian Jopling, Jan 2020
#
# Description:
#   Deploys components required for the API Gateway; namely
#   the Gateway itself and the stages.
#


AWSTemplateFormatVersion: "2010-09-09"
Description: Nested template for creating API Gateway infra.

Parameters:
  S3OpenApiSpecBucket:
    Type: String
    Default: studybuddy-cfn-templates
    Description: Name of S3 bucket containing the OpenAPI Specification.
  S3PathToOpenApiSpec:
    Type: String
    Default: api-openapi.yaml
  StageName:
    Type: String
    Default: v1
  APIUrl:
    Type: String
    Default: "api.somethingcode.com"
  CognitoUserPoolArn:
    Type: String
    Default: placeholder
    Description: Required and used by the OpenAPI spec during the RestAPI creation.
  LambdaWsHandlerName:
    Type: String
    Default: placeholder
    Description: Name of the ws_handler Lambda, passed in from the master template.

Resources:

  # IAM Role to allow API GW to invoke its Lambda functions.
  RoleApiGwInvokeLambda:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - apigateway.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: InvokeLambda
        PolicyDocument:
          Statement:
          - Action:
            - lambda:InvokeFunction
            Resource: "*"
            Effect: Allow
          Version: '2012-10-17'

  ############
  # REST API #
  ############

  # Mapping for API GW
  RestApiStudyBuddyBackend:
    Type: AWS::ApiGateway::RestApi
    Properties:
        Body:
          'Fn::Transform':
            Name: 'AWS::Include'
            Parameters:
              Location: !Sub "s3://${S3OpenApiSpecBucket}/${S3PathToOpenApiSpec}"
        Name: StudyBuddyBackend

  # Stage (snapshot) of API GW mapping and configuration
  StageStudyBuddyBackend:
    Type: AWS::ApiGateway::Stage
    Properties:
      StageName: !Ref StageName
      RestApiId: !Ref RestApiStudyBuddyBackend
      DeploymentId: !Ref DeploymentStudyBuddyBackend

  # Actual deployment of stage.
  DeploymentStudyBuddyBackend:
    Type: 'AWS::ApiGateway::Deployment'
    Properties:
      RestApiId: !Ref RestApiStudyBuddyBackend
      Description: Deployment of RestApi mapping.

  # TLS cert used by custom domain name.
  Cert:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: !Ref APIUrl
      DomainValidationOptions:
        - DomainName: !Ref APIUrl
          ValidationDomain: !Ref APIUrl
      ValidationMethod: DNS

  # Allows API to have custom domain name.
  CustomDomainNameStudyBuddyApi:
    Type: AWS::ApiGateway::DomainName
    Properties: 
      CertificateArn: !Ref Cert
      DomainName: !Ref APIUrl
      EndpointConfiguration: 
        Types: 
          - EDGE
      SecurityPolicy: "TLS_1_2"
      
  # Connects custom domain name to Rest API.
  BasePathMapping:
    Type: AWS::ApiGateway::BasePathMapping
    Properties:
      DomainName: !Ref CustomDomainNameStudyBuddyApi
      RestApiId: !Ref RestApiStudyBuddyBackend
      Stage: !Ref StageStudyBuddyBackend

  #################
  # WebSocket API #
  #################

  WsApiGwApi:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      ApiKeySelectionExpression: "$request.header.x-api-key"
      Description: "WebSocket API to provide live updates"
      Name: "StudyBuddyWs"
      ProtocolType: WEBSOCKET
      RouteSelectionExpression: "$request.body.action"
  WsApiGwAuthorizer:
    Type: AWS::ApiGatewayV2::Authorizer
    Properties: 
      ApiId: !Ref WsApiGwApi
      AuthorizerCredentialsArn: !GetAtt RoleApiGwInvokeLambda.Arn
      AuthorizerType: REQUEST
      AuthorizerUri: !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${LambdaWsHandlerName}"
      IdentitySource:
        - route.request.querystring.id_token
      Name: WsAuth
  ConnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref WsApiGwApi
      RouteKey: $connect
      AuthorizationType: CUSTOM
      AuthorizerId: !Ref WsApiGwAuthorizer
      OperationName: ConnectRoute
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref ConnectInteg
  ConnectInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref WsApiGwApi
      CredentialsArn: !GetAtt RoleApiGwInvokeLambda.Arn
      Description: "Connect Integration"
      IntegrationType: AWS_PROXY
      IntegrationUri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${LambdaWsHandlerName}/invocations"

  DisconnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref WsApiGwApi
      RouteKey: $disconnect
      AuthorizationType: CUSTOM
      AuthorizerId: !Ref WsApiGwAuthorizer
      OperationName: DisconnectRoute
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref DisconnectInteg
  DisconnectInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref WsApiGwApi
      CredentialsArn: !GetAtt RoleApiGwInvokeLambda.Arn
      Description: "Disconnect Integration"
      IntegrationType: AWS_PROXY
      IntegrationUri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${LambdaWsHandlerName}/invocations"

  WsApiGwStage:
    Type: AWS::ApiGatewayV2::Stage
    Properties: 
      ApiId: !Ref WsApiGwApi
      AutoDeploy: true
      DeploymentId: !Ref WsApiGwDeployment
      Description: "Stage of WebSocket API GW"
      StageName: v1

  WsApiGwDeployment:
    Type: AWS::ApiGatewayV2::Deployment
    Properties: 
      ApiId: !Ref WsApiGwApi
      Description: "Deployment of WebSocket API GW"

Outputs:
  WsApiGwUrl:
    Value: !Sub "https://${WsApiGwApi}.execute-api.${AWS::Region}.amazonaws.com/${WsApiGwStage}"
  WsApiGwWss:
    Value: !Sub "wss://${WsApiGwApi}.execute-api.${AWS::Region}.amazonaws.com/${WsApiGwStage}"

